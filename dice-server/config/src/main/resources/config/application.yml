############################# 访问路径、端口tomcat start #############################
server:
  # 项目端口
  port: 9091
  # 内嵌Tomcat
  tomcat:
    # tomcat编码
    uri-encoding: UTF-8
    threads:
      # tomcat线程池大小设置
      max: 1000
      # tomcat初始化线程数量
      min-spare: 30
  servlet:
    context-path:
    # HTTP编码
    encoding:
      charset: UTF-8
      enabled: true
      force: true
############################# 访问路径、端口tomcat end ###############################

################################ spring config start ###############################
spring:
  application:
    # 应用程序名称
    name: dice
  mail:
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  banner:
    charset: UTF-8
    location: classpath:config/banner.txt
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 50MB
  # 当前项目maven激活环境
  profiles:
    active: @profileActive@
  output:
    ansi:
      enabled: detect

# logback.xml中有详细的日志配置
logging:
  config: classpath:config/logback.xml
  #  方便Spring Boot Admin页面上实时查看日志
  file:
    name: logs/${spring.application.name}.log
################################ spring config end #################################

############################### mybatis-plus start #################################
mybatis-plus:
  # 启动时是否检查MyBatis XML文件是否存在
  check-config-location: true
  # 支持统配符 * 或者 ; 分割
  typeEnumsPackage: com.bihell.dice.blog.enums
  # MyBatis原生配置
  configuration:
    # 字段名称下划线转驼峰命名
    map-underscore-to-camel-case: true
  global-config:
    # 全局默认主键类型
    db-config:
      id-type: auto
      # 逻辑未删除值(默认为 0)
      logic-not-delete-value: 0
      # 逻辑已删除值(默认为 1)
      logic-delete-value: 1
  # mapper xml映射路径
  mapper-locations: classpath*:mapper/**/*Mapper.xml
################################ mybatis-plus end ##################################

################################ dice start ########################################
dice:
  # 服务器IP地址
  server-ip: 127.0.0.1
  # 是否启用验证码 todo
  enable-verify-code: false
  # 默认新建用户登录初始化密码
  login-init-salt: 666666
  login-init-password: admin
  login-init-head: http://${dice.server-ip}/api/resource/logo.png
  # 实现BaseEnum接口的枚举包
  enum-packages: com.example.foorbar.enums
  # Swagger路径
  swagger-paths: /swagger-ui.html,/favicon.ico,/docs,/doc.html,/swagger-resources/**,/webjars/**,/v3/api-docs,/csrf,/v2/api-docs-ext,/null/swagger-resources/**
  # Filter配置
  filter:
    request:
      enable: true
      url-patterns: /*
      order: 1
      async: true
    xss:
      enable: false
      url-patterns: /*
      order: 2
      async: true

  # 拦截器配置
  interceptor:
    permission:
      enable: false
      include-paths: /**
    resource:
      enable: false
      include-paths: ${dice.resource-access-patterns}
    upload:
      enable: false
      include-paths: /upload/**
    download:
      enable: false
      include-paths: /download/**

  # AOP配置
  aop:
    # Aop日志配置
    log:
      # 是否启用
      enable: true
      # 是否启用requestId
      enable-request-id: true
      # requestId生成规则: UUID/IDWORK
      request-id-type: IDWORK
      # NONE：不打印日志
      # ORDER：请求和响应日志，按照执行顺序分开打印
      # LINE：方法执行结束时，连续分开打印请求和响应日志
      # MERGE：方法执行结束时，合并请求和响应日志，同时打印
      log-print-type: ORDER
      # 请求日志在控制台是否格式化输出，local环境建议开启，服务器环境设置为false
      request-log-format: true
      # 响应日志在控制台是否格式化输出，local环境建议开启，服务器环境设置为false
      response-log-format: true
      # 排除的路径
      exclude-paths: /,/csrf
    # 操作日志配置
    operation-log:
      # 是否启用
      enable: true
      # 排除的路径
      exclude-paths:
    # 登录日志配置
    login-log:
      # 是否启用
      enable: true
      # 登录地址
      login-path: /v1/api/admin/auth/login
      # 登出地址
      logout-path: /v1/api/admin/auth/logout

  # 文件上传下载配置
  # 上传目录（当前用户下）
  upload-folder: /opt/upload/
  # 资源访问路径
  resource-access-path: /resource/
  # 资源访问路径匹配：/resource/**
  resource-access-patterns: ${dice.resource-access-path}**
  # 资源访问全路径前缀：
  resource-access-url: http://${dice.server-ip}:${server.port}${server.servlet.context-path}${dice.resource-access-path}
  # 全局允许上传的类型
  allow-upload-file-extensions: jpg,png,docx,xlsx,pptx,pdf
  # 全局允许下载的类型
  allow-download-file-extensions: jpg,png,docx,xlsx,pptx,pdf


  ######################## Spring Shiro start ########################
  shiro:
    # 是否启用
    enable: true
    # 权限配置
    anon:
      # 排除登录登出
      - /v1/api/admin/auth/login,/v1/api/admin/auth/logout
      # 排除静态资源
      - /static/**,/templates/**
      # 排除Swagger
      - ${dice.swagger-paths}
      # 排除actuator
      - /actuator/**
      # 排除首页
      - /,/index.html
      # 排除测试路径
      - /hello/world,/fooBar/**,/exampleOrder/**
      # 排除上传的文件
      - /media/**
      # 排除博客nuxt前端
      - /blog/nuxt/**
    # 多行字符串权限配置
    filter-chain-definitions: |
      /resource/**=anon
      /upload/**=anon
      /verificationCode/**=anon
      /enum=anon
      /getSysUserInfo=anon

  ######################## Spring Shiro end ##########################

  ############################ CORS start ############################
  # CORS跨域配置，默认允许跨域
  cors:
    # 是否启用跨域，默认启用
    enable: true
    # CORS过滤的路径，默认：/**
    path: /**
    # 允许访问的源 (spring-boot 2.0以后allowedOrigins不能用通配符*，改用allowedOriginPatterns）
    allowed-origins: '*'
    allowed-origin-patterns: '*'
    # 允许访问的请求头
    allowed-headers: '*'
    # 是否允许发送cookie
    allow-credentials: true
    # 允许访问的请求方式
    allowed-methods: OPTION,GET,POST,PUT,DELETE
    # 允许响应的头
    exposed-headers: Authorization
    # 该响应的有效时间默认为30分钟，在有效时间内，浏览器无须为同一请求再次发起预检请求
    max-age: 1800
  ############################ CORS end ##############################

  ########################## Resource start ##########################
  # 静态资源访问配置
  resource-handlers: |
    /static/**=classpath:/static/
    swagger-ui.html=classpath:/META-INF/resources/
    /webjars/**=classpath:/META-INF/resources/webjars/
    doc.html=classpath:/META-INF/resources/
  ########################## Resource end ############################

  ############################ JWT start #############################
  jwt:
    # token请求头名称
    token-name: Authorization
    # jwt密钥
    secret: 666666
    # 发行人
    issuer: ${spring.application.name}
    # 观众
    audience: web
    # 默认过期时间1小时，单位：秒
    expire-second: 36000
    # 是否刷新token
    refresh-token: true
    # 刷新token的时间间隔，默认10分钟，单位：秒
    refresh-token-countdown: 600
    # redis校验jwt token是否存在,可选
    redis-check: false
    # true: 同一个账号只能是最后一次登录token有效，false：同一个账号可多次登录
    single-login: true
    # 盐值校验，如果不加自定义盐值，则使用secret校验
    salt-check: true
  ############################ JWT end ###############################

################################ dice end ##########################################

############################## Spring boot admin start ##############################
---
spring:
  boot:
    admin:
      client:
        # Spring Boot Admin服务地址，参照admin模块application.yml配置
        url: http://${dice.server-ip}:8000
        # Spring Boot Admin账号
        username: admin
        # Spring Boot Admin密码
        password: admin
        # 当前项目实例名称
        instance:
          # client名称
          name: ${spring.application.name}
          # client ip端口
          service-base-url: http://${dice.server-ip}:${server.port}
      monitor:
        period: 100000
        status-lifetime: 100000
        connect-timeout: 100000
        read-timeout: 100000

# 开启和暴露端点
management:
  endpoint:
    health:
      show-details: ALWAYS
    logfile:
      #可在线查看日志
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'

# 自定义项目信息，Spring Boot Admin展示使用
info:
  project-groupId: '@project.parent.groupId@'
  project-name: ${spring.application.name}
  project-finalName: '@boot.artifact.name@'
  project-author: tpxcer
  project-description: ${spring.application.name} project
  project-sourceEncoding: '@project.build.sourceEncoding@'
  project-spring-boot-version: '@spring-boot.version@'
  project-mybatis-plus-version: '@mybatis-plus-boot-starter.version@'
  project-version: '@project.version@'
  project-website: 'https://bihell.com'
  project-home: http://${dice.server-ip}:${server.port}
  project-swagger: http://${dice.server-ip}:${server.port}/swagger-ui.html
  project-knife4j: http://${dice.server-ip}:${server.port}/doc.html
############################## Spring boot admin end ###############################

#################################### Swagger start #################################
---
dice:
  swagger:
    # 请求前缀
    pathMapping: /
    # 是否启用
    enable: true
    base:
      # 扫描的包，多个包使用逗号隔开
      package: com.bihell.dice,
    contact:
      email: tpxcer@outlook.com
      name: 胖哥
      url: https://github.com/bihell/Dice
    description: 个人管理系统API操作文档
    title: ${spring.application.name} API Documents
    url: https://github.com/bihell/Dice
    version: ${project.version}
    # 自定义参数配置，可配置N个
    parameter-config:
      - name: ${dice.jwt.token-name}
        description: Token Request Header
        # header, cookie, body, query
        type: header
        data-type: String
        required: false
        # 测试接口时，自动填充token的值
        default-value:

# knife4j配置
knife4j:
  enable: ${dice.swagger.enable}
  basic:
    enable: true
    username: admin
    password: admin

#################################### Swagger end ###################################
